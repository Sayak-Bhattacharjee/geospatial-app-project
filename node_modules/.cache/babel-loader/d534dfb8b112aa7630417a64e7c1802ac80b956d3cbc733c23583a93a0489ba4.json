{"ast":null,"code":"// import Vue from 'vue';\n// import VueRouter from 'vue-router';\nimport { createRouter, createWebHistory } from 'vue-router';\nimport Register_Page from '../components/Register_Page.vue';\nimport Login_Page from '../components/Login_Page.vue';\nimport MapComponent from '../components/MapComponent.vue';\nimport Home_Page from '../components/Home_Page.vue';\n\n// Vue.use(VueRouter);\n\nconst routes = [{\n  path: '/',\n  name: 'Home',\n  component: Home_Page\n}, {\n  path: '/register',\n  name: 'Register',\n  component: Register_Page\n}, {\n  path: '/login',\n  name: 'Login',\n  component: Login_Page\n}, {\n  path: '/map',\n  name: 'Map',\n  component: MapComponent,\n  meta: {\n    requiresAuth: true\n  }\n}];\n\n// const router = new VueRouter({\n//   mode: 'history',\n//   base: process.env.BASE_URL,\n//   routes\n// });\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  // const isAuthenticated = !!localStorage.getItem('user'); // Simple authentication check\n  const isLoggedIn = localStorage.getItem('isLoggedIn');\n  if (to.matched.some(record => record.meta.requiresAuth) && !isLoggedIn) {\n    next({\n      name: 'Login'\n    });\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","Register_Page","Login_Page","MapComponent","Home_Page","routes","path","name","component","meta","requiresAuth","router","history","beforeEach","to","from","next","isLoggedIn","localStorage","getItem","matched","some","record"],"sources":["E:/geospatial-app/src/router/index.js"],"sourcesContent":["// import Vue from 'vue';\r\n// import VueRouter from 'vue-router';\r\nimport { createRouter, createWebHistory } from 'vue-router';\r\nimport Register_Page from '../components/Register_Page.vue';\r\nimport Login_Page from '../components/Login_Page.vue';\r\nimport MapComponent from '../components/MapComponent.vue';\r\nimport Home_Page from '../components/Home_Page.vue';\r\n\r\n// Vue.use(VueRouter);\r\n\r\nconst routes = [\r\n    {\r\n        path: '/',\r\n        name: 'Home',\r\n        component: Home_Page\r\n    },\r\n    { \r\n        path: '/register',\r\n        name: 'Register',\r\n        component: Register_Page\r\n    },\r\n    { \r\n        path: '/login',\r\n        name: 'Login',\r\n        component: Login_Page \r\n    },\r\n    { \r\n        path: '/map',\r\n        name: 'Map', \r\n        component: MapComponent,\r\n        meta: { requiresAuth: true }\r\n    }\r\n];\r\n\r\n// const router = new VueRouter({\r\n//   mode: 'history',\r\n//   base: process.env.BASE_URL,\r\n//   routes\r\n// });\r\n\r\nconst router = createRouter({\r\n    history: createWebHistory(),\r\n    routes\r\n  });\r\n\r\nrouter.beforeEach((to, from, next) => {\r\n    // const isAuthenticated = !!localStorage.getItem('user'); // Simple authentication check\r\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\r\n\r\n    if (to.matched.some(record => record.meta.requiresAuth) && !isLoggedIn) {\r\n      next({ name: 'Login' });\r\n    } else {\r\n      next();\r\n    }\r\n  });\r\n\r\nexport default router;"],"mappings":"AAAA;AACA;AACA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,aAAa,MAAM,iCAAiC;AAC3D,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,SAAS,MAAM,6BAA6B;;AAEnD;;AAEA,MAAMC,MAAM,GAAG,CACX;EACIC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEJ;AACf,CAAC,EACD;EACIE,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEP;AACf,CAAC,EACD;EACIK,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN;AACf,CAAC,EACD;EACII,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,KAAK;EACXC,SAAS,EAAEL,YAAY;EACvBM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAK;AAC/B,CAAC,CACJ;;AAED;AACA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EACxBa,OAAO,EAAEZ,gBAAgB,CAAC,CAAC;EAC3BK;AACF,CAAC,CAAC;AAEJM,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;EAErD,IAAIL,EAAE,CAACM,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,IAAI,CAACO,UAAU,EAAE;IACtED,IAAI,CAAC;MAAET,IAAI,EAAE;IAAQ,CAAC,CAAC;EACzB,CAAC,MAAM;IACLS,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEJ,eAAeL,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}